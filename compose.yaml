
services:


  db:
    image: mysql:latest
    healthcheck:
        test: ["CMD", "mysqladmin" ,"ping", "-h", "${MYSQL_SERVER_NAME}"]
        timeout: 10s
        retries: 10
    restart: always
    volumes:
      - db-data:/var/lib/mysql
    environment:
      MYSQL_DATABASE: ${DATABASE_NAME}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_ROOT_USER: ${DATABASE_USERNAME}
      MYSQL_ROOT_HOST: ${DATABASE_HOST}
    ports:
      - "3306:3306"
    env_file:
      -  ./backend/.env


  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: notetify-backend
    ports:
      - "8000:8000"
    depends_on:
      - db
    environment:
      DJANGO_SECRET_KEY: ${DJANGO_SECRET_KEY}
      DEBUG: ${DEBUG}
      DJANGO_LOGLEVEL: ${DJANGO_LOGLEVEL}
      DJANGO_ALLOWED_HOSTS: ${DJANGO_ALLOWED_HOSTS}
      DATABASE_ENGINE: ${DATABASE_ENGINE}
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_HOST: ${DATABASE_HOST}
      DATABASE_PORT: ${DATABASE_PORT}
    env_file:
      -  ./backend/.env

  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    container_name: notetify-frontend
    ports:
      - "5173:5173"
      - "1234:1234"
    depends_on:
      - backend
    volumes:
      - .:/app
      - /app/node_modules
    environment:
      NODE_ENV: development
    stdin_open: true
    tty: true
    command: npm run dev
    env_file:
      -  ./frontend/.env

volumes:
  db-data:
