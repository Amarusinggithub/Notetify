services:
  db:
    image: mysql:latest
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "${MYSQL_SERVER_NAME}"]
      timeout: 10s
      retries: 10
    restart: always
    volumes:
      - db-data:/var/lib/mysql
    environment:
      MYSQL_DATABASE: ${DATABASE_NAME}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_ROOT_USER: ${DATABASE_USERNAME}
      MYSQL_ROOT_HOST: ${DATABASE_HOST}
    ports:
      - "3307:3306"
    env_file:
      - .env

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: notetify-backend
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    environment:
      DJANGO_SECRET_KEY: ${DJANGO_SECRET_KEY}
      DEBUG: ${DEBUG}
      DJANGO_LOGLEVEL: ${DJANGO_LOGLEVEL}
      DJANGO_ALLOWED_HOSTS: ${DJANGO_ALLOWED_HOSTS}
      DATABASE_ENGINE: ${DATABASE_ENGINE}
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_HOST: db #${DATABASE_HOST}
      DATABASE_PORT: ${DATABASE_PORT}
    env_file:
      - .env

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: notetify-frontend
    ports:
      - "5173:5173"
      - "1234:1234"
    depends_on:
      backend:
        condition: service_started
      db:
        condition: service_healthy
    volumes:
      - ./frontend:/usr/src/app
      - node_modules_frontend:/usr/src/app/node_modules
    environment:
      NODE_ENV: development
    stdin_open: true
    tty: true
    command: npm run dev:docker
    env_file:
      - .env

volumes:
  db-data:
  node_modules_frontend:

