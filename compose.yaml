services:
  db:
    networks:
      - notetify-net
    image: postgres:latest
    container_name: notetify_db
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 10s
      timeout: 10s
      retries: 10
    restart: always
    user: postgres
    secrets:
      - db-password
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=example
      - POSTGRES_PASSWORD_FILE=/run/secrets/db-password
    expose:
      - 5432
    ports:
      - "5432:5432"
    env_file:
      - .env.development

  redis:
    networks:
      - notetify-net
    image: redis:latest
    container_name: notetify_redis
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      retries: 10
    restart: always
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - "redis-data:/data"
    expose:
      - 6379
    ports:
      - "6379:6379"
    env_file:
      - .env.development



  backend:
    networks:
      - notetify-net
    build:
      context: ./api
      dockerfile: Dockerfile
      target: development
    command: sh ./entrypoint.dev.sh
    container_name: notetify-api
    restart: always
    ports:
      - "8000:80"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file:
      - .env.development

  frontend:
    networks:
      - notetify-net
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: development
    container_name: notetify-frontend
    ports:
      - "3000:3000"
    depends_on:
      backend:
        condition: service_started
      db:
        condition: service_healthy
    volumes:
      - ./frontend:/usr/src/app
      - node_modules_frontend:/usr/src/app/node_modules
    stdin_open: true
    tty: true
    command: ["sh", "entrypoint.sh"]
    env_file:
      - .env.development

networks:
  notetify-net:
    driver: bridge

volumes:
  redis-data: {}
  db-data: {}
  node_modules_frontend: {}


# secrets:
#   db-password:
#     file: db/password.txt
