
upstream channels-backend {

 server 0.0.0.0:8000;
}

server {
    listen 80;
    #listen 443 ssl;
  server_name 0.0.0.0;

  # React build output directory
  root /usr/share/nginx/html;
  index index.html;

  # Serve React SPA
  location / {
    try_files $uri /index.html;
  }

  # Cache static assets
  location ~* \.(js|css|png|jpg|jpeg|gif|svg|ico|woff|woff2|ttf|eot)$ {
    expires 6M;
    access_log off;
    add_header Cache-Control "public";
  }

  # Proxy API requests to Django backend
  location /api/ {
    proxy_pass http://0.0.0.0:8000;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
  }


#path to proxy my WebSocket requests

  location /ws/ {
 
 proxy_pass http://channels-backend;
 proxy_http_version 1.1;
 proxy_set_header Upgrade $http_upgrade;
 proxy_set_header Connection “upgrade”;
 proxy_redirect off;
 proxy_set_header Host $host;
 proxy_set_header X-Real-IP $remote_addr;
 proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
 proxy_set_header X-Forwarded-Host $server_name;
 }

  # Serve Django static files (optional if nginx is serving them directly)
  #location /static/ {
  #  alias /usr/share/nginx/static/;
   # access_log off;
   # expires 30d;
 # }

  # Serve Django media files (user uploads)
 # location /media/ {
  #  alias /usr/share/nginx/media/;
  #  access_log off;
  #  expires 30d;
  #}

add_header X-Content-Type-Options nosniff;
add_header X-Frame-Options DENY;
add_header X-XSS-Protection "1; mode=block";

error_page 404 /index.html;

  # Optional: gzip compression
  gzip on;
  gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
  gzip_min_length 256;
}
