
x-app-defaults: &app_defaults
  build:
    context: ./backend
  init: true
  links:
    - broker
    - db_prod
  environment:
    - REDIS_HOST=broker
    - DJANGO_DEBUG=0
  depends_on:
    - broker
    - db_prod

services:
  db_prod:
    networks:
      - notetify-net
    image: mysql:latest
    container_name: notetify-db-prod
    healthcheck:
      test:
        [
          "CMD",
          "mysqladmin",
          "ping",
          "-h",
          "localhost",
          "-uroot",
          "-p${MYSQL_ROOT_PASSWORD}",
        ]
      timeout: 10s
      retries: 10
    restart: always
    volumes:
      - db-data-prod:/var/lib/mysql
    environment:
      MYSQL_DATABASE: ${DATABASE_NAME}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_ROOT_USER: ${DATABASE_USERNAME}
      MYSQL_ROOT_HOST: ${DATABASE_HOST}
    ports:
      - "3307:3306"
    env_file:
      - .env.production

  backend_prod:
    networks:
      - notetify-net
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: production
      args:
        - REQUIREMENTS_FILE=requirements_prod.txt
    command: sh ./entrypoint.prod.sh
    container_name: notetify-backend-prod
    restart: always
    expose:
      - "8000:8000"
    depends_on:
      db_prod:
        condition: service_healthy
    # volumes:
    # - django_static:/app/staticfiles
    #- media_volume:/app/media
    environment:
      UVICORN_RELOAD: true
      DJANGO_ENV: ${DJANGO_ENV}
      DJANGO_SECRET_KEY: ${DJANGO_SECRET_KEY}
      DEBUG: ${DEBUG}
      DJANGO_LOGLEVEL: ${DJANGO_LOGLEVEL}
      DJANGO_ALLOWED_HOSTS: ${DJANGO_ALLOWED_HOSTS}
      DATABASE_ENGINE: ${DATABASE_ENGINE}
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_HOST: db
      DATABASE_PORT: ${DATABASE_PORT}
      REDIS_HOST: broker #${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      REDIS_BACKEND: ${REDIS_BACKEND}
    env_file:
      - .env.production

  broker:
    networks:
      - notetify-net
    image: redis:latest
    container_name: notetify_redis
    volumes:
      - "redis-data:/data"
    environment:
      REDIS_HOST: broker #${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      REDIS_BACKEND: ${REDIS_BACKEND}
    expose:
      - 6379
    ports:
      - "6379:6379"
    env_file:
      - .env.production

  frontend_prod:
    networks:
      - notetify-net
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: production
    container_name: notetify-frontend-prod
    command: ["true"]
    volumes:
      - static_volume:/usr/src/app/dist
    environment:
      NODE_ENV: ${NODE_ENV}
      VITE_BASE_URL: ${VITE_BASE_URL}
      VITE_WS_ORIGIN: ${VITE_WS_ORIGIN}

    env_file:
      - .env.production

  worker:
    networks:
      - notetify-net
    <<: *app_defaults
    command: "python manage.py yroom"

  nginx:
    image: nginx:stable-alpine
    container_name: notetify-nginx
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - static_volume:/usr/share/nginx/html:ro
      #- django_static:/usr/share/nginx/static:ro
      #- media_volume:/usr/share/nginx/media:ro
    depends_on:
      - backend_prod
      - frontend_prod

networks:
  notetify-net:
    driver: bridge

volumes:
  db-data-prod:
  node_modules_frontend:
  redis-data:
  static_volume:
  # django_static:
  #media_volume:
