services:
  db_dev:
    image: mysql:latest
    container_name: notetify_db_dev
    networks:
      notetify-net-dev:
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      retries: 10
    restart: always
    volumes:
      - db-data-dev:/var/lib/mysql
    ports:
      - "3307:3306"
    env_file:
      - .env.development
    environment:
      MYSQL_ROOT_PASSWORD: mysql
      MYSQL_ROOT_HOST: "%"
      MYSQL_DATABASE: notetify_db

  redis_dev:
    image: redis:latest
    container_name: notetify_redis
    networks:
      notetify-net-dev:
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      retries: 10
    restart: always
    depends_on:
      db_dev:
        condition: service_healthy
    volumes:
      - redis-data-dev:/data
    ports:
      - "6379:6379"
    env_file:
      - .env.development

  yroom_worker_dev:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: development
      args:
        - REQUIREMENTS_FILE=requirements_dev.txt
    container_name: yroom_worker_dev
    networks:
      - notetify-net-dev
    depends_on:
      redis_dev:
        condition: service_healthy
      db_dev:
        condition: service_started
    env_file:
      - .env.development
    entrypoint: []
    command: "python manage.py yroom"

  backend_dev:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: development
      args:
        - REQUIREMENTS_FILE=requirements_dev.txt
    container_name: notetify-backend_dev
    networks:
      - notetify-net-dev
    depends_on:
      db_dev:
        condition: service_healthy
      redis_dev:
        condition: service_healthy
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"
    env_file:
      - .env.development
    command: sh ./entrypoint.dev.sh

  frontend_dev:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: development
    container_name: notetify-frontend_dev
    networks:
      - notetify-net-dev
    depends_on:
      backend_dev:
        condition: service_started
    volumes:
      - ./frontend:/usr/src/app
      - node_modules_frontend-dev:/usr/src/app/node_modules
    ports:
      - "3000:3000"
    env_file:
      - .env.development
    stdin_open: true
    tty: true
    command: ["sh", "entrypoint.sh"]

networks:
  notetify-net-dev:
    driver: bridge

volumes:
  redis-data-dev: {}
  db-data-dev: {}
  node_modules_frontend-dev: {}
